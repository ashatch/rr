#!/bin/bash

function usage {
  echo "Usage:"
  echo "   rr [options...] <script file|command> [comma separated ip list]"
  echo ""
  echo "   (if no ip list specified, will read from stdin)"
  echo ""
  echo "Options:"
  echo "  -h --help        Show this usage information"
  echo "  -u --user        User, default ec2-user"
  echo "  -s --safe        Default off, enabling safe will prevent connecting to unknown hosts"
  echo "  -i --identity    SSH key file"
  exit 1
}

HELP=""
IDENTITY=""
USER="ec2-user"
CHECKS="-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"

while [[ $# -gt 2 ]]
do
  key="$1"

  case $key in
      -u|--user)
      USER="$2"
      shift
      ;;
      -s|--safe)
      CHECKS=""
      ;;
      -i|--identity)
      IDENTITY="-i $2"
      shift
      ;;
      -h|--help|-?)
      HELP="on"
      ;;
      *)
        # unknown option
      ;;
  esac
  shift
done

if [[ ${HELP} = "on" ]]; then
  usage
fi

SCRIPT=$1
IPs=$2

if [[ -z "${SCRIPT// }" ]]; then
  usage
  exit 1
fi

# if there are no IPs supplied in the command line arg
# read from stdin
if [[ -z "${IPs// }" ]]; then
  echo "Reading from stdin"
  while read line
  do
    IPs="${line} ${IPs}"
  done < "${2:-/dev/stdin}"
else
  IPs=$(sed 's|,| |g' <<< $IPs)
fi

trap "trap - SIGTERM && kill -- -$$ 2>/dev/null" SIGINT SIGTERM EXIT

# Execute the script on all machines
for IP in $IPs
do
  echo "Executing on ${IP}"
  if [[ -e "${SCRIPT}" ]]; then
    cat ${SCRIPT} | ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o LogLevel=quiet -t ${IDENTITY} ${USER}@${IP} | awk -F "\n" "{ print \"${IP} \t\" \$0 }" &
  else
    ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o LogLevel=quiet -t ${IDENTITY} ${USER}@${IP} ${SCRIPT} | awk -F "\n" "{ print \"${IP} \t\" \$0 }" &
  fi
done
wait
